// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// prod db
// datasource db {
//   provider = "postgresql"
//   url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

// model User {
//   userId String @db.VarChar(36) @id @default(uuid())
//   username String @db.VarChar(100) @unique 
//   name String @db.VarChar(255)
//   email String @db.VarChar(255) @unique
//   password String @db.Text
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt   DateTime
}

model Post {
  postId String @db.VarChar(36) @id @default(uuid())
  title String @db.VarChar(255)
  slug String @db.VarChar(255) @unique
  content String @db.Text
  catId String @db.VarChar(50)
  thumbnail String @db.VarChar(255)
  draft Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postImages PostImage[]

  category       Category    @relation(fields: [catId], references: [catId])
}

model PostImage {
  imageId String @db.VarChar(36) @id @default(uuid())
  fileName String @db.VarChar(255)
  postId     String @db.VarChar(36)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post       Post    @relation(fields: [postId], references: [postId])
}

model Category {
  catId String @db.VarChar(36) @id @default(uuid())
  name String @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
}