// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// prod db
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime
}

model Post {
  postId     String      @id @default(uuid()) @db.VarChar(36)
  title      String      @db.VarChar(255)
  slug       String      @unique @db.VarChar(255)
  content    String?     @db.Text
  catId      String      @db.VarChar(50)
  thumbnail  String      @db.VarChar(255)
  draft      Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  postImages PostImage[]

  category Category @relation(fields: [catId], references: [catId])
}

model PostImage {
  imageId   String   @id @default(uuid()) @db.VarChar(36)
  fileName  String   @db.VarChar(255)
  postId    String   @db.VarChar(36)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [postId])
}

model Category {
  catId     String   @id @default(uuid()) @db.VarChar(36)
  name      String   @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
}
